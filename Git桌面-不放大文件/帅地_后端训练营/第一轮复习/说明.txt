做一个，得一个，不要当成任务，激发自己的好奇心，能够提出问题。

1、无任务，轮流着来，不要想着完成一块任务
2、慢，不在于多，在于一个问题一个问题真正解决就。
3、专研，一个点越细越好，越深越好，深挖，根据问题提出自己的问题。一个问题可以花一天、花一周、去专研
4、查阅文献和资料

一个问题就是一个点，由此可以延申很多，越深越好

多问为什么、凭什么？
要自己能够问出问题
不会的就针对性地查询
针对问题学习

总之 在于深度，不在于广度


做一个，得一个，不在多和快

output

能够问出问题是最好的

不在于快慢，一周做一个点都可以。跟这个没关系，真正有关的是有没有弄懂？

面试题问题很重要，自己也要能提出问题


慢慢来，得一个，是一个。

一点一点来吧，急不得

慢慢来，不着急

不在于进度，在于你是否真正弄懂了一个东西


重要是搞懂，不是搞了多少


多问为什么，凭什么


问题引导式学习 ，可以去查找问题，训练自己也能问出高质量问题。


带着问题读、多读几遍

开放式的回答，尽量多聊，聊的有条理

不要浮躁，跟快慢没关系，没有定量的要求

不要设置量的标准，只设置懂没懂的标准


不要急，不要设置任务，如果乱学还不如不学

不在于快，在于你能不能搞懂这些概念

该放图放图，不要吝惜空间。


一些如何做的问题可以写博客，在回答里面写博客已记录。

就往文档里面写，不要在乎大小，git传不了了再换一个文档就行

习惯自己能提出问题，当然也可以查看比如出的问题

得一个是一个

带着问题去读，去学

不要定读多少，看多少 ，学多少的目标

不要定目标，关键不在于你学了多少，关键在于你是否真正懂了

乱作，不如不做

重要的不是快，而是懂没懂，自己能不能提出问题

不要浮躁，乱来还不如不做


重点是自己能够提出问题，结合别人问出的面试体。

能够提出问题，问题引导式学习